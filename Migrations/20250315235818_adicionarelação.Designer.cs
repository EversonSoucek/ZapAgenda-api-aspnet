// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZapAgenda_api_aspnet.data;

#nullable disable

namespace ZapAgenda_api_aspnet.Migrations
{
    [DbContext(typeof(CoreDBContext))]
    [Migration("20250315235818_adicionarelação")]
    partial class adicionarelação
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Agendamento", b =>
                {
                    b.Property<int>("IdAgendamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAgendamento"));

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("char(36)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("StatusAgendamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdAgendamento");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.AgendamentoServico", b =>
                {
                    b.Property<int>("IdAgendamento")
                        .HasColumnType("int");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TempoDuracaoAgendamento")
                        .HasColumnType("time(6)");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("IdAgendamento", "IdServico");

                    b.HasIndex("IdServico");

                    b.ToTable("AgendamentoServico");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Cargo", b =>
                {
                    b.Property<int>("IdCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCargo"));

                    b.Property<string>("NomeCargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCargo");

                    b.ToTable("Cargo");

                    b.HasData(
                        new
                        {
                            IdCargo = 1,
                            NomeCargo = "Admin"
                        },
                        new
                        {
                            IdCargo = 2,
                            NomeCargo = "User"
                        },
                        new
                        {
                            IdCargo = 3,
                            NomeCargo = "MaxAdmin"
                        });
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataUltimoAgendamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TotalAgendamentos")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Empresa", b =>
                {
                    b.Property<Guid>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeMunicipio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Numero")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Servico", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdServico"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("char(36)");

                    b.Property<TimeSpan>("TempoDuracao")
                        .HasColumnType("time(6)");

                    b.Property<float>("Valor")
                        .HasColumnType("float");

                    b.HasKey("IdServico");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdCargo")
                        .HasColumnType("int");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeInteiro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("PerfilBloqueado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TentativasLogin")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UltimaTentativaFalhaLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UltimoLogin")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdCargo");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Agendamento", b =>
                {
                    b.HasOne("ZapAgenda_api_aspnet.models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZapAgenda_api_aspnet.models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZapAgenda_api_aspnet.models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.AgendamentoServico", b =>
                {
                    b.HasOne("ZapAgenda_api_aspnet.models.Agendamento", "Agendamento")
                        .WithMany("AgendamentoServico")
                        .HasForeignKey("IdAgendamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZapAgenda_api_aspnet.models.Servico", "Servico")
                        .WithMany("AgendamentoServico")
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Cliente", b =>
                {
                    b.HasOne("ZapAgenda_api_aspnet.models.Empresa", "Empresa")
                        .WithMany("Cliente")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Servico", b =>
                {
                    b.HasOne("ZapAgenda_api_aspnet.models.Empresa", "Empresa")
                        .WithMany("Servico")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Usuario", b =>
                {
                    b.HasOne("ZapAgenda_api_aspnet.models.Cargo", "Cargo")
                        .WithMany("Usuario")
                        .HasForeignKey("IdCargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZapAgenda_api_aspnet.models.Empresa", "Empresa")
                        .WithMany("Usuario")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Agendamento", b =>
                {
                    b.Navigation("AgendamentoServico");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Cargo", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Empresa", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Servico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZapAgenda_api_aspnet.models.Servico", b =>
                {
                    b.Navigation("AgendamentoServico");
                });
#pragma warning restore 612, 618
        }
    }
}
